# set -g default-terminal "screen-256color" # colors! and italics
# set -sa terminal-overrides ',xterm-kitty:RGB'
# set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q' # cursor

set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

setw -g xterm-keys on
set -s escape-time 5                     # faster command sequences
set -sg repeat-time 240                   # increase repeat timeout
set -s focus-events on

set -g prefix C-a
unbind C-a
bind C-a send-prefix

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

set -g history-limit 10000                 # boost history

# Undercurl
# set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# edit configuration
bind e new-window -n "~/.tmux.conf" "nvim ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\""
# edit kitty.conf
bind k new-window -n "~/.config/kitty/kitty.conf" "nvim ~/.config/kitty/kitty.conf"
# reload configuration
# bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'
# TODO: rename window
# bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 5     # redraw status line every 10 seconds

# activity
set -g monitor-activity on
set -g visual-activity off

set -g remain-on-exit off      # remain attached when last client detaches

# -- navigation ----------------------------------------------------------------

bind w choose-tree -Zw
# create session
bind C-c new-session
# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# clear both screen and history
bind C-\\ last-window
bind l send-keys 'C-l' \; run 'sleep 0.4' \; clear-history

# split current window horizontally
bind s split-window -v -c "#{pane_current_path}"
# split current window vertically
bind v split-window -h -c "#{pane_current_path}"
# hide/restore windows
bind C-w break-pane -d
bind C-s join-pane -v -s $.1
bind C-v join-pane -h -s $.1

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

bind-key -n 'C-Left' if-shell "$is_vim" 'send-keys C-Left' 'resize-pane -L 4'
bind-key -n 'C-Down' if-shell "$is_vim" 'send-keys C-Down' 'resize-pane -D 4'
bind-key -n 'C-Up' if-shell "$is_vim" 'send-keys C-Up' 'resize-pane -U 4'
bind-key -n 'C-Right' if-shell "$is_vim" 'send-keys C-Right' 'resize-pane -R 4'

bind-key -T copy-mode-vi 'C-Left' resize-pane -L 4
bind-key -T copy-mode-vi 'C-Down' resize-pane -D 4
bind-key -T copy-mode-vi 'C-Up' resize-pane -U 4
bind-key -T copy-mode-vi 'C-Right' resize-pane -R 4

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
  "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
  "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# pane navigation
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

bind -r C-R respawn-window

# window navigation
unbind n
unbind p

bind -r C-j previous-window # select previous window
bind -r C-k next-window     # select next window
bind -r C-h swap-window -t -1\; select-window -t -1
bind -r C-l swap-window -t +1\; select-window -t +1

# pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind Tab last-window        # move to last active window

# -- buffers -------------------------------------------------------------------
bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from

# Custom
unbind x
# edit tmuxinator projects
bind -r x new-window -n "tmuxinator" "nvim ~/.config/tmuxinator"
bind C-x kill-pane

set -g mode-keys vi
bind a copy-mode
run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

bind -r i run-shell "tmux neww ~/bin/cht.sh ';' set -qw remain-on-exit off"
bind -r h run-shell "tmux neww zsh -c htop ';' set -qw remain-on-exit off"

bind -r G run-shell "~/.local/share/nvim/site/pack/packer/start/harpoon/scripts/tmux/switch-back-to-nvim"

set-option -g status-position bottom

# List of plugins
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @continuum-restore 'on'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'dracula/tmux'

# resurrect shortcuts
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

# dracula
set -g @dracula-show-powerline true
set -g @dracula-day-month true
set -g @dracula-show-fahrenheit false
set -g @dracula-left-icon-padding 3
set -g @dracula-cpu-usage true
set -g @dracula-show-timezone false
set -g @dracula-show-flags true
set -g @dracula-show-location false
set -g @dracula-show-battery true
set -g @dracula-show-network false

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
