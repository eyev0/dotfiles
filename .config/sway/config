# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

# xwayland disable

font Source Code Pro Bold 12

exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
set $gnome-schema org.gnome.desktop.interface
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
# set $menu "wofi --show=drun | xargs swaymsg exec -- "
set $menu "rofi -modi drun,run -show drun"

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs


### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
# input "1:1:AT_Translated_Set_2_keyboard" {
#     xkb_layout us,ca
#     xkb_variant ,multix
#     xkb_options grp:shifts_toggle
# }
input type:keyboard {
    repeat_delay 200
    repeat_rate 40
    xkb_layout us,ru
    xkb_options grp:rctrl_toggle
}

input type:touchpad {
    dwt enabled
    tap enabled
    natural_scroll enabled
    tap_button_map lrm
}

# laptop lid
set $laptop eDP-1
bindswitch lid:on output $laptop disable
bindswitch lid:off output $laptop enable
bindsym --to-code $mod+t exec swaymsg output $laptop disable
bindsym --to-code $mod+Shift+t exec swaymsg output $laptop enable

### Autostart
#
#
#

exec swayidle -w \
     timeout 900 'swaylock -f -i $HOME/.config/sway/wallpapers/lockscreen_wallpaper.jpg' \
     timeout 1200 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
     before-sleep 'swaylock -f -c 000000'
exec_always $HOME/.config/sway/scripts/get_bing_image.sh
exec /usr/lib/geoclue-2.0/demos/agent
exec gammastep -m wayland
exec blueman-applet
exec nm-applet --indicator
exec $HOME/.config/sway/scripts/inactive-windows-transparency.py -o 1
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec autotiling
exec swaykbdd
exec_always {
    gsettings set $gnome-schema gtk-theme 'Arc-Dark'
    gsettings set $gnome-schema icon-theme 'Papirus'
}

### Key bindings
#
# Basics:
#


# Start a terminal
bindsym --to-code $mod+Return exec $term

# Kill focused window
bindsym --to-code $mod+q kill

# Start your launcher
# bindsym --to-code $mod+d exec wofi --show=drun
bindsym --to-code $mod+d exec $menu
# bindsym --to-code $mod+Slash exec python $HOME/.config/sway/scripts/switch-window.py
# bindsym --to-code $mod+Slash exec "sh $HOME/.config/sway/scripts/switch-window.sh"

# Start your file manager
bindsym --to-code $mod+e exec nemo

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym --to-code $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
bindsym --to-code $mod+Equal exec nwg-bar -t bar.json

bindsym --to-code XF86AudioRaiseVolume exec pamixer -i 2
bindsym --to-code XF86AudioLowerVolume exec pamixer -d 2
bindsym --to-code XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
# bindcode 248 exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym --to-code Shift+XF86AudioMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym --to-code Shift+XF86AudioRaiseVolume exec pamixer --default-source -i 1
bindsym --to-code Shift+XF86AudioLowerVolume exec pamixer --default-source -d 1

bindsym --to-code XF86MonBrightnessDown exec brightnessctl -q set 5%-
bindsym --to-code XF86MonBrightnessUp exec brightnessctl -q set +5%

bindsym --to-code Print exec $HOME/.config/sway/scripts/grimshot.sh copy output
bindsym --to-code Shift+Print exec $HOME/.config/sway/scripts/grimshot.sh copy active
bindsym --to-code Ctrl+Shift+Print exec $HOME/.config/sway/scripts/grimshot.sh copy area

#
# Moving around:
#

# Move your focus around
bindsym --to-code $mod+$left focus left
bindsym --to-code $mod+$down focus down
bindsym --to-code $mod+$up focus up
bindsym --to-code $mod+$right focus right

# Move the focused window with the same, but add Shift
bindsym --to-code $mod+Shift+$left move left
bindsym --to-code $mod+Shift+$down move down
bindsym --to-code $mod+Shift+$up move up
bindsym --to-code $mod+Shift+$right move right

#
# Workspaces:
#

# Switch to workspace
bindsym --to-code $mod+Ctrl+l workspace next
bindsym --to-code $mod+Ctrl+h workspace prev
bindsym --to-code $mod+1 workspace number 1
bindsym --to-code $mod+2 workspace number 2
bindsym --to-code $mod+3 workspace number 3
bindsym --to-code $mod+4 workspace number 4
bindsym --to-code $mod+5 workspace number 5
bindsym --to-code $mod+6 workspace number 6
bindsym --to-code $mod+7 workspace number 7
bindsym --to-code $mod+8 workspace number 8
bindsym --to-code $mod+9 workspace number 9
bindsym --to-code $mod+0 workspace number 10

# Move focused container to workspace
# bindsym --to-code $mod+Shift+l workspace next
# bindsym --to-code $mod+Shift+h workspace prev
# Move focused container to workspace and swith to it
bindsym --to-code $mod+Ctrl+n move container to workspace next; workspace next
bindsym --to-code $mod+Ctrl+p move container to workspace prev; workspace prev
bindsym --to-code $mod+Shift+1 move container to workspace number 1; workspace number 1
bindsym --to-code $mod+Shift+2 move container to workspace number 2; workspace number 2
bindsym --to-code $mod+Shift+3 move container to workspace number 3; workspace number 3
bindsym --to-code $mod+Shift+4 move container to workspace number 4; workspace number 4
bindsym --to-code $mod+Shift+5 move container to workspace number 5; workspace number 5
bindsym --to-code $mod+Shift+6 move container to workspace number 6; workspace number 6
bindsym --to-code $mod+Shift+7 move container to workspace number 7; workspace number 7
bindsym --to-code $mod+Shift+8 move container to workspace number 8; workspace number 8
bindsym --to-code $mod+Shift+9 move container to workspace number 9; workspace number 9
bindsym --to-code $mod+Shift+0 move container to workspace number 0; workspace number 0

# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

#
# Layout stuff:
#

#gaps and borders
default_border pixel 3
# client.focused #4c7899 #285577 #ffffff #2e9ef4 #01fd1b
default_floating_border normal 2
gaps inner 11

# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
# split in horizontal orientation
bindsym --to-code $mod+s split h
# split in vertical orientation
bindsym --to-code $mod+v split v

# Switch the current container between different layout styles
bindsym --to-code $mod+w layout tabbed
bindsym --to-code $mod+Shift+w layout stacking
bindsym --to-code $mod+Shift+e layout toggle split

# Make the current focus fullscreen
bindsym --to-code $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym --to-code $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym --to-code $mod+space focus mode_toggle

# focus the parent container
bindsym --to-code $mod+p focus parent
# focus the child container
bindsym --to-code $mod+c focus child

# Move the currently focused window to the scratchpad.
bindsym --to-code $mod+m move scratchpad
# Show the next next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym --to-code $mod+Shift+m scratchpad show

#
# Resizing containers:
#

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym --to-code $left resize shrink width 10px
    bindsym --to-code $down resize grow height 10px
    bindsym --to-code $up resize shrink height 10px
    bindsym --to-code $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym --to-code Left resize shrink width 10px
    bindsym --to-code Down resize grow height 10px
    bindsym --to-code Up resize shrink height 10px
    bindsym --to-code Right resize grow width 10px

    # Return to default mode
    bindsym --to-code Return mode "default"
    bindsym --to-code Escape mode "default"
}
bindsym --to-code $mod+r mode "resize"

#
# Rules
#

for_window [app_id="blueman-manager"] floating enable, resize set width 680 height 400, \
    move position center
for_window [app_id="pavucontrol"] floating enable, resize set width 680 height 400, \
    move position center
for_window [app_id="nm-connection-editor"] floating enable, move position center
for_window [app_id="gnome-calculator"] floating enable, move center
for_window [class="^.*"] inhibit_idle fullscreen
for_window [app_id="^.*"] inhibit_idle fullscreen

#
# Status Bar:
#

# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
}

# include /etc/sway/config.d/*
